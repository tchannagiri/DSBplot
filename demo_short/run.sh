### Directories. Run this first! ###
input_fq_dir="input/fastq"
input_sam_dir="input/sam"
ref_seq_dir="input/ref_seq"
output_dir="output"
debug_dir="debug"

### Processing ###
# We show three ways of doing the processing. All should give identical results.

# First way: Do all processing stages in a single command
DSBplot-process -i "$input_fq_dir/Sense_R1_1.fq" "$input_fq_dir/Sense_R1_2.fq" "$input_fq_dir/Sense_R1_3.fq" "$input_fq_dir/Sense_R1_4.fq" --ref "$ref_seq_dir/2DSB_Sense_R1.fa" --dsb 67 -o "$output_dir/Sense_R1" --label "Sense_R1" --reads 3000 3000 3000 3000

# Second way: Run each processing stage separately
# Some parameters are not required to be specified for a subsequent stage if they are used in the previous stage.
DSBplot-process -i "$input_fq_dir/Sense_R1_1.fq" "$input_fq_dir/Sense_R1_2.fq" "$input_fq_dir/Sense_R1_3.fq" "$input_fq_dir/Sense_R1_4.fq" --ref "$ref_seq_dir/2DSB_Sense_R1.fa" -o "$output_dir/Sense_R1" --stages 0
DSBplot-process --ref "$ref_seq_dir/2DSB_Sense_R1.fa" --dsb 67 -o "$output_dir/Sense_R1" --reads 3000 3000 3000 3000 --stages 1_filter
DSBplot-process -o "$output_dir/Sense_R1" --stages 2_window
DSBplot-process -o "$output_dir/Sense_R1" --stages 3_variation
DSBplot-process -o "$output_dir/Sense_R1" --stages 4_info

# Third way: Run all process stages except alignment by inputting pre-aligned SAM files.
# The SAM files are actually just generated by Bowtie 2 in the same way as before so they give identical results.
# However, users are free to use their own alignment method.
DSBplot-process -i "$input_sam_dir/Sense_R1_1.sam" "$input_sam_dir/Sense_R1_2.sam" "$input_sam_dir/Sense_R1_3.sam" "$input_sam_dir/Sense_R1_4.sam" --ref "$ref_seq_dir/2DSB_Sense_R1.fa" --dsb 67 -o "$output_dir/Sense_R1" --label "Sense_R1" --reads 3000 3000 3000 3000

### Plot the graphs (PNG) ###
# PNG and PDF generation for graphs requires kaleido to be installed.
# Please see installation instructions in the README.
DSBplot-graph -i "$output_dir/Sense_R1" -o "plots/graph/Sense_R1_universal.png" --debug "$debug_dir/universal" --layout universal --title "Sense_R1 Universal Layout" --width 2400 --height 1800 --ul_yax_x 0 --ul_xax_del_y 0 --ul_xax_ins_y 0
DSBplot-graph -i "$output_dir/Sense_R1" -o "plots/graph/Sense_R1_kamada.png" --debug "$debug_dir/kamada" --layout kamada --title "Sense_R1 Kamada-Kawaii Layout" --width 2400 --height 1800 --sep 1
DSBplot-graph -i "$output_dir/Sense_R1" -o "plots/graph/Sense_R1_radial.png" --debug "$debug_dir/radial" --layout radial --title "Sense_R1 Radial Layout" --width 2400 --height 1800

### Plot the graphs (HTML) ###
DSBplot-graph -i "$output_dir/Sense_R1" -o "plots/graph/Sense_R1_universal.html" --layout universal --title "Sense_R1 Universal Layout" --width 2400 --height 1800 --ul_yax_x 0 --ul_xax_del_y 0 --ul_xax_ins_y 0
DSBplot-graph -i "$output_dir/Sense_R1" -o "plots/graph/Sense_R1_kamada.html" --layout kamada --title "Sense_R1 Kamada-Kawaii Layout" --width 2400 --height 1800 --sep 1
DSBplot-graph -i "$output_dir/Sense_R1" -o "plots/graph/Sense_R1_radial.html" --layout radial --title "Sense_R1 Radial Layout" --width 2400 --height 1800

### Plot the 3D histograms (PNG) ###
DSBplot-histogram -i "$output_dir/Sense_R1" -o "plots/histogram/Sense_R1_sub.png" --title "Sense_R1 Substitutions" --color "#bfbfbf" --mar_t 200 --var sub --xax rel
DSBplot-histogram -i "$output_dir/Sense_R1" -o "plots/histogram/Sense_R1_ins.png" --title "Sense_R1 Insertions" --color "#ffa500" --mar_t 200 --var ins --xax rel
DSBplot-histogram -i "$output_dir/Sense_R1" -o "plots/histogram/Sense_R1_del.png" --title "Sense_R1 Deletions" --color "#8080ff" --mar_t 200 --var del --xax rel
